<!DOCTYPE html>
<html lang="en">
<head>
  <%- include('utils/head'); %>
<style>
  ul {
    list-style: none;
    padding: 0;
  }
  .page {
    background-color: #121212;
    width: 100vw;
    overflow-x: hidden;
    height: calc(100vh - 60px);
    color: white;
  }
  .page-title {
    width: 80%;
    min-width: 280px;
    max-width: 1200px;
    margin: 30px auto 10px;
    font-weight: 600;
    font-size: 20px;
  }
  .page-operation {
    width: 80%;
    min-width: 280px;
    max-width: 1200px;
    font-weight: 500;
    font-size: 20px;
    margin: 10px auto 10px;
    display: flex;
    justify-content: space-between;
    align-items: baseline;
  }
  .posts-container {
    display: flex;
    flex-direction: column;
    width: 80%;
    min-width: 280px;
    max-width: 1200px;
    height: calc(100vh - 220px);
/*     min-height: 500px; */
    overflow-y: scroll;
    list-style: none;
    margin: auto;
/*     margin-top: 5vh; */
  }
  .end-text {
    font-size: 12px;
    text-align: center;
  }

  .create {
    padding: 3px 12px;
    color: #e4e4e4;
    cursor: pointer;
    background-color: #2c2c2c;
    box-shadow: #000 4px 4px 12px -2px;
    border-radius: 6px;
    font-size: 17px;
    transition: 0.2s ease;
  }
  .create:hover {
    color: white;
    background-color: #23ade5;
  }
  .sort {
    min-width: 100px;
    cursor: pointer;
    color: #c4c4c4;
    padding: 2px 4px;
    font-size: 12px;
    border-radius: 5px;
    margin: 10px 0;
    text-align: left;
  }
  .sort.selected {
    color: white;
    background-color: #fb7299;
  }
/* On screens that are less than 700px wide, make the sidebar into a topbar */
@media screen and (min-width: 1100px) {
  .create {
    font-size: 18px;
  }
  .page-operation {
    font-size: 24px;
  }
  .sort {
    font-size: 15px;
    padding: 4px 10px;
  }
}

/* On screens that are less than 400px, display the bar vertically, instead of horizontally */
@media screen and (max-width: 400px) {
  .page-title {
    margin-top: 10px;
  }
  .posts-container {
    height: calc(100vh - 190px);
  }
  .create {
    font-size: 12px;
  }

  .page-operation {
    font-size: 18px;
  }
}

</style>
</head>
<body>
  <%- include('utils/postmodal') %>
  <%- include('utils/header', { user }); %>

<div class="page"> 
      <div class="page-title"> <span>Posts</span> <span style='font-size: 15px;'> (<%= posts.length %>) </span> </div> 

    <div class="page-operation"> 
    <div class="sort">
      Sort By: &nbsp;&nbsp;
      <span class="sort heat selected" id="heat" onclick="sortBy('heat')"> Heat </span>&nbsp;&nbsp;
      <span class="sort time" id="time" onclick="sortBy('time')"> Time </span>
    </div>
    <div class="create" onclick="addNewPost()">
      Create New
    </div>
  </div>
  
  <ul class="posts-container">
    <% for (let i = 0; i < posts.length; i++) { %>
      <li> <%- include('utils/postabstract', { post: posts[i], user: user });  %> </li>
    <% } %>
    <%if (posts.length > 5) { %>
      <li class="end-text">
        This is the end...
      </li>
    <% } %>
  </ul>
</div>
<script>
  
  let selectedSort = 'heat'
  const heat = document.getElementById('heat')
  const time = document.getElementById('time')
  
  window.addEventListener('load', (event) => {
    const search = window.location.search
    const exp = /(?<=\?|&)(?<k>\w+)=(?<v>\w+)/g
    const res = search.match(exp)
    if (res) {
      const sort = res[0].split('=')[1]
      sortBy(sort, false)
    }
  })
  
  /**
   * Sort by 'heat' or 'time'
   */
  function sortBy (type, reload = true) {
    if (type !== 'time') type = 'heat'
    if (type === 'heat') {
      heat.classList.remove('selected')
      heat.classList.add('selected')
      time.classList.remove('selected')
    } else {
      heat.classList.remove('selected')
      time.classList.remove('selected')
      time.classList.add('selected')
    }
    if (reload) window.open(`/?sort=${type}`, '_self')
  }
  
  function getPosts () {
    try {
      const res = getPostsApi().then(res => {
        if (res.code === 500) {
          //
        } else if (res.code === 200) {
          console.log(res.data)
        }
      }).catch(err => {
        // showToast('toast, \'Error Occurred!')
      })
      
      return false
    } catch (error) {
      return []
    }
  }

  function addNewPost () {
    showModal()
  }
</script>
</body>

</html>